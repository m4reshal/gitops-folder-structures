apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  name: openshift-gitops
  namespace: openshift-gitops
spec:
  #extraConfig:
  #  "admin.enabled": "true"
    #"admin.enabled": "true" is used in 1.5.5
    #oidc.tls.insecure.skip.verify: "true"  #This line is used in 1.6.0
  applicationSet:
    resources:
      limits:
        cpu: "2"
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi
  controller:
    processors: {}
    resources:
      limits:
        cpu: "2"
        memory: 2Gi
      requests:
        cpu: 250m
        memory: 1Gi
    sharding:
      enabled: true
      replicas: 1
  sso:
    provider: keycloak
  #dex: {}
  #dex:
  #  openShiftOAuth: true
  #  resources:
  #    limits:
  #      cpu: 500m
  #      memory: 256Mi
  #    requests:
  #      cpu: 250m
  #      memory: 128Mi
  grafana:
    enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
    route:
      enabled: false
  ha:
    #enabled: true
    enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  initialSSHKnownHosts: {}
  prometheus:
    enabled: false
    ingress:
      enabled: false
    route:
      enabled: false
  rbac:
    policy: |
      g, system:cluster-admins, role:admin
      g, cluster-admins, role:admin
      g, REDHAT_ADMINS, role:admin
    scopes: '[groups]'
  redis:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 150m
        memory: 128Mi
  repo:
    #replicas: 2
    replicas: 1
    resources:
      limits:
        cpu: "1"
        memory: 1Gi
      requests:
        cpu: 150m
        memory: 256Mi
  resourceCustomizations: |
    bitnami.com/SealedSecret:
      health.lua: |
        hs = {}
        hs.status = "Healthy"
        hs.message = "Controller doesnt report status"
        return hs
    route.openshift.io/Route:
      ignoreDifferences: |
        jsonPointers:
        - /spec/host
  resourceExclusions: |
    - apiGroups:
      - tekton.dev
      clusters:
      - '*'
      kinds:
      - TaskRun
      - PipelineRun
  server:
    replicas: 1
    #replicas: 2
    autoscale:
      enabled: false
    grpc:
      ingress:
        enabled: false
    ingress:
      enabled: false
    insecure: true
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 125m
        memory: 128Mi
    route:
      enabled: true
      #tls:
      #  insecureEdgeTerminationPolicy: Redirect
      #  termination: edge
    service:
      type: ""
  tls:
    ca: {}
